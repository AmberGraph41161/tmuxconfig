### IMPORTANT ###
	set-option -g default-shell /bin/zsh
	# TRUE COLOR TERM "https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6"
	set -g default-terminal "tmux-256color" #home and end keys actually work
	set -as terminal-overrides ",alacritty*:RGB"
		#set -g default-terminal "screen-256color" #home and end keys actually work
		#set -g default-terminal "xterm-256color"
		#set -g default-terminal "tmux-256color"
		#set -g default-terminal "st-256color" #works with cava, but no gradient
		#set -as terminal-features ",gnome*:RGB"
		#set -as terminal-overrides ",gnome*:Tc"
		#TERM=tmux-256color

# SET LEADER KEY
	unbind C-b
	set -g prefix C-' '

	#VI MODE
	set -g status-keys vi
	set -g mode-keys vi #vi bindings for copy-mode

### general settings ###
	set -g history-limit 10000
	set -g mouse off
	set -g allow-rename on
	set -g automatic-rename off
	set -g aggressive-resize on
	set -sg escape-time 0 #time it waits for keycords to register (sorta like double click delay time)
	set -g display-time 700 #error message and stuff
	set -g repeat-time 200
	set -g buffer-limit 20 #I have no idea wtf this is LMAO
	set -g visual-bell on #goofy ahh errors sent to bell
	set -g bell-action other #:shrugemoji:
	set -g cursor-style default

	#set -g set-titles on
	#set -g set-titles-string "#I:#W"

	#bind b movew -r
	set-option -g renumber-windows on
	set -g base-index 1
	set -g pane-base-index 1

### RGB YUHHHH RGB ###
	set -g pane-active-border-style "fg=black,bg=white"
	set -g pane-border-style "fg=white,bg=black"
	set -g window-active-style "bg=default"
	set -g window-style "bg=default"
	set -g message-style "fg=red,bg=black"
	set -g mode-style "fg=black,bg=white"

### STATUS BAR ###
	tri_left=""
	tri_right=""

	set -g status on
	bind \\ set -g status on
	bind | set -g status off
	set -g status-interval 5
	set -g status-position bottom
	set -g status-justify left
	set -g status-right-length 100
	set -g status-left-length 100
	set -g status-style "fg=white,bg=black" #this is basically the color in between the WINDOW TABS and RIGHT TABS

	#LEFT TABS FIRST
	set -g status-left "#[fg=black,bg=red] #S #[fg=red,bg=black]$tri_right"

	#WINDOW TABS IN BETWEEN, LEFT JUSTIFIED
	set -g window-status-style "fg=gray,bg=white"
	set -g window-status-format "#[fg=black,bg=white]$tri_right[#I] #W #[fg=white,bg=black]$tri_right"
	set -g window-status-current-style "fg=black,bg=white"
	set -g window-status-current-format "#[fg=black,bg=green]$tri_right#[fg=black,bg=green]{#I} #W #[fg=green,bg=black]$tri_right"
	set -g window-status-separator ""

	#RIGHT TABS LAST
	#set -g status-right "#[fg=orange,bg=black]$tri_left#[fg=black,bg=orange] #{t:window_activity}#[fg=black,bg=orange] $tri_left#[fg=magenta,bg=black]$tri_left#[fg=black,bg=magenta] Panes [#{window_panes}] #[fg=black,bg=magenta]$tri_left#[fg=blue,bg=black,]$tri_left#[fg=black,bg=blue] #{client_termname} "
	set -g status-right "#[fg=magenta,bg=black]$tri_left#[fg=black,bg=magenta] Panes [#{window_panes}] "


### KEYBINDS ###
	#you have to unbind the keybinds first... kinda stupid but ye
	unbind q # switch/select pane by number || show pane numbers
	bind q detach
	bind Q confirm-before -p "#[fg=red,bg=black][[ KILL current session? #S (y/n) ]]" kill-session

	unbind [ #enter copy-mode
	unbind ] #paste buffer

	bind 'v' copy-mode #note to self that "ctrl-shift-f" does a quick search (for highlight locate only)
	bind 'p' paste-buffer
	bind -r C-p choose-buffer

	bind -T cancel Escape
	bind -T copy-mode-vi 'Home' send -X start-of-line
	bind -T copy-mode-vi 'End' send -X end-of-line
	bind -T copy-mode-vi 'v' send -X begin-selection
	bind -T copy-mode-vi 'Y' send -X copy-selection
	bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

	#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"

	#RENAME/RELOAD
	unbind "\$" #rename session
	unbind , #rename window
	bind r command-prompt -I "#{window_name}" "rename-window '%%'"
	bind R command-prompt -I "#{session_name}" "rename-session '%%'"
	bind -r M-r source-file ~/.tmux.conf \; display "config reloaded"
	bind -r C-l clear-history

	#WIDOWS/TABS
	unbind c #create new tab
	unbind & #close current tab
	unbind p #previous tab
	unbind n #next tab
	bind Down new-window
	bind Up confirm-before -p "#[fg=red,bg=black][[ KILL current window? [y/n] ]]" kill-window
	bind -r C-Up confirm-before -p "#[fg=red,bg=black][[ KILL all other windows? [y/n] ]]" "kill-window -a"

	bind Left previous-window
	bind Right next-window
	bind -r S-Tab last-window
	bind -r Tab next-window
	bind -r S-Left swap-window -t -1\; select-window -t -1
	bind -r S-Right swap-window -t +1\; select-window -t +1

	#"choose window"
	unbind w #list windows
	#"https://unix.stackexchange.com/questions/417853/tmux-interactive-window-selector-fullscreen-while-in-split"
	#pretty sure this is stupid because this is the default keybinding but ye leave it for now cuz screw you
	#bind w choose-window -Z
	#apparently this^^^ is the old version...?
	bind w choose-tree -w

	#PANES
	unbind '%' #split pane LR
	unbind '"' #split pane UD
	unbind '}' #swap-pane -D
	unbind '{' #swap-pane -U
	bind i split-window -h -c "#{pane_current_path}"
	bind u split-window -v -c "#{pane_current_path}"
	bind -r C-y swap-pane -D
	bind -r C-Y swap-pane -U
	bind h select-pane -L
	bind j select-pane -D
	bind k select-pane -U
	bind l select-pane -R
	bind y select-pane -t :.-
	bind Y select-pane -t :.+
	#bind ' ' toggle-pane-layouts (not a real command but ye. just for me to reference)
	bind n confirm-before -p "#[fg=red,bg=black][[ KILL current pane? [y/n] ]]" kill-pane
	# bind ! --> convert pane into a window

	unbind z #zoom pane
	bind f resize-pane -Z
	unbind M-up #resize 5 rows up
	unbind M-down #resize 5 rows down
	unbind M-right #resize 5 rows right
	unbind M-Left #resize 5 rows left
	bind -r H resize-pane -L 5
	bind -r J resize-pane -D 5
	bind -r K resize-pane -U 5
	bind -r L resize-pane -R 5
	bind -r C-h resize-pane -L 1
	bind -r C-j resize-pane -D 1
	bind -r C-k resize-pane -U 1
	bind -r C-l resize-pane -R 1
	
	#automation
	bind C-r confirm-before -p "#[fg=red,bg=black][[ overwrite windows with DEFAULTLAYOUT ? (y/n) ]]"\
		'run-shell "tmux kill-window -a\\; rename-window MAIN\\; new-window\\; rename-window MUSIC\\; new-window\\; rename-window ytdl\\; new-window\\; rename-window calcurse\\; new-window\\; select-window -t 1"'
		#this is lightning speed compared to tmux-resurrect, with the caveate of losing saved windows and stuff, but I don't mind


### RANDOM DOCUMENTATION ###
	#random documentation: "https://tmuxcheatsheet.com/"
	#set OPTION for all sessions "set -g OPTION"
	#set OPTION for all windows "setw -g OPTION"
	#enable mouse mode "set mouse on"
	#list all tmux bindings ":list-keys"
	#display buffer_0 contents ":show-buffer"
	#copy entire visible contents of a pane to a buffer ":capture-pane"
	#show all buffers ":list-buffers"
	#show all bufferes and paste selected ":choose-buffer"
	#save vuffer contents to buf.txt ":save-buffer buf.txt"
	#delete buffer_1 ":delete-buffer -b 1"
	#join two windows as panes (merge window 2 to window 1 as panes) ":join-pane -s 2 -t 1"
	#move pane from one window to another (move pane 1 from window 2 to pane after 0 of window 1) ":join-pane -s 2.1 -t 1.0"
	#reorder window, swap window number 2(src) and 1 (dst) ":swap-window -s 2 -t 1"
	#move current window to the lft by one position ":swap-window -t -1"
	#move window from source to target ":move-window -s src_ses:win -t target_ses:win" ":movew -s foo:0 -t bar:9" ":movew -s 0:0 -t 1:9"
	#reposition window in the current session ":move-window -s src_session:src_window" "movew -s 0:9"
	#renumber windows to remove gap in the sequence "move-window -r" "movew -r"
	#detach others on the session (maximize window by detach other clients "attach -d"

	### DEFAULT KEY BINDINGS ###
    #   tmux may be controlled from an attached client by using a key
    #   combination of a prefix key, ‘C-b’ (Ctrl-b) by default, followed
    #   by a command key.

    #   The default command key bindings are:

    #         C-b         Send the prefix key (C-b) through to the
    #                     application.
    #         C-o         Rotate the panes in the current window
    #                     forwards.
    #         C-z         Suspend the tmux client.
    #         !           Break the current pane out of the window.
    #         "           Split the current pane into two, top and
    #                     bottom.
    #         #           List all paste buffers.
    #         $           Rename the current session.
    #         %           Split the current pane into two, left and
    #                     right.
    #         &           Kill the current window.
    #         '           Prompt for a window index to select.
    #         (           Switch the attached client to the previous
    #                     session.
    #         )           Switch the attached client to the next session.
    #         ,           Rename the current window.
    #         -           Delete the most recently copied buffer of text.
    #         .           Prompt for an index to move the current window.
    #         0 to 9      Select windows 0 to 9.
    #         :           Enter the tmux command prompt.
    #         ;           Move to the previously active pane.
    #         =           Choose which buffer to paste interactively from
    #                     a list.
    #         ?           List all key bindings.
    #         D           Choose a client to detach.
    #         L           Switch the attached client back to the last
    #                     session.
    #         [           Enter copy mode to copy text or view the
    #                     history.
    #         ]           Paste the most recently copied buffer of text.
    #         c           Create a new window.
    #         d           Detach the current client.
    #         f           Prompt to search for text in open windows.
    #         i           Display some information about the current
    #                     window.
    #         l           Move to the previously selected window.
    #         m           Mark the current pane (see select-pane -m).
    #         M           Clear the marked pane.
    #         n           Change to the next window.
    #         o           Select the next pane in the current window.
    #         p           Change to the previous window.
    #         q           Briefly display pane indexes.
    #         r           Force redraw of the attached client.
    #         s           Select a new session for the attached client
    #                     interactively.
    #         t           Show the time.
    #         w           Choose the current window interactively.
    #         x           Kill the current pane.
    #         z           Toggle zoom state of the current pane.
    #         {           Swap the current pane with the previous pane.
    #         }           Swap the current pane with the next pane.
    #         ~           Show previous messages from tmux, if any.
    #         Page Up     Enter copy mode and scroll one page up.
    #         Up, Down
    #         Left, Right
    #                     Change to the pane above, below, to the left,
    #                     or to the right of the current pane.
    #         M-1 to M-5  Arrange panes in one of the five preset
    #                     layouts: even-horizontal, even-vertical, main-
    #                     horizontal, main-vertical, or tiled.
    #         Space       Arrange the current window in the next preset
    #                     layout.
    #         M-n         Move to the next window with a bell or activity
    #                     marker.
    #         M-o         Rotate the panes in the current window
    #                     backwards.
    #         M-p         Move to the previous window with a bell or
    #                     activity marker.
    #         C-Up, C-Down
    #         C-Left, C-Right
    #                     Resize the current pane in steps of one cell.
    #         M-Up, M-Down
    #         M-Left, M-Right
    #                     Resize the current pane in steps of five cells.

    #   Key bindings may be changed with the bind-key and unbind-key
    #   commands.



### PLUGINS (TPM plugin manager) ###
	#	#Install TPM first "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm "
	#	#keybinds:
	#	# prefix + I = install new plugins
	#	# prefix + U = update plugins
	#	# prefix + alt + U = remove/uninstall plugins not on the plugin list
	#
	#	#required:
	#	set -g @plugin 'tmux-plugins/tpm'
	#	set -g @plugin 'tmux-plugins/tmux-sensible'
	#
	#	#my plugins:
	#	set -g @plugin 'tmux-plugins/tmux-resurrect'
	#		#keybinds:
	#		# prefix + Ctrl-s = save session
	#		# prefix + Ctrl-r = restore
	#		
	#		#restore vim/nvim sessions if a session file is present:
	#		#set -g @resurrect-strategy-vim 'session'
	#		#set -g @resurrect-strategy-nvim 'session'
	#
	#
	#	# Other examples:
	#	# set -g @plugin 'github_username/plugin_name'
	#	# set -g @plugin 'github_username/plugin_name#branch'
	#	# set -g @plugin 'git@github.com:user/plugin'
	#	# set -g @plugin 'git@bitbucket.com:user/plugin'
	#
	#	# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
	#	run '~/.tmux/plugins/tpm/tpm' #kinda makes thing slow to load... Friday, May 5, 2023, 3:09:11PM
